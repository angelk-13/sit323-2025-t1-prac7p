---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-credentials
type: Opaque
stringData:
  mongo-root-username: admin
  mongo-root-password: securepass
  mongo-app-username: appuser
  mongo-app-password: apppassword
---
# DB PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
# INIT DB
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init-script
data:
  init.js: |
    // runs on first start, creates application DB & user
    db = db.getSiblingDB('myappdb');
    db.createUser({
      user: 'appuser',
      pwd:  'apppassword',
      roles: [{ role: 'readWrite', db: 'myappdb' }]
    });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongo
          image: mongo:6.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-credentials
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-credentials
                  key: mongo-root-password
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
        - name: init-script
          configMap:
            name: mongo-init-script
---
# SERVICE
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
---
# BACKUP PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
# BACKUP
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongo-backup
spec:
  schedule: "*/2 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: mongo:6.0
              env:
                - name: MONGO_HOST
                  value: mongodb-service
                - name: MONGO_USER
                  valueFrom:
                    secretKeyRef:
                      name: mongo-credentials
                      key: mongo-root-username
                - name: MONGO_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mongo-credentials
                      key: mongo-root-password
              command:
                - /bin/sh
                - -c
                - |
                  mkdir -p /backups/$(date +%Y%m%d) && mongodump --host ${MONGO_HOST} -u ${MONGO_USER} -p ${MONGO_PASSWORD} --authenticationDatabase admin --out /backups/$(date +%Y%m%d)
              volumeMounts:
                - name: backup-storage
                  mountPath: /backups
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: backup-pvc
